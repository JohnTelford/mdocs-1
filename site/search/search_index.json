{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Iterative Development Abstract Creating and maintaining websites that meet users needs are, complex, difficult, and time consuming. Introduction This website created by johntelford.com LLC , is about optimizing website project life time costs using Iterative Development, Web Component Technologies, and static site generator for developing websites. Developers working on website features, fixes, or testing can deploy private Preview Internet websites with their changes, without disturbing other developers work or the website production version enabling stakeholders to monitor progress and quickly give feedback, speeding up the development process. The slightest errors during development will require Defect Remediation Costs sometime during the life time of the website. The highest cost over the life time of website projects is remediating defects. Content and software defects cost less when found early during development This website is being created and maintained by the technologies described.","title":"Home"},{"location":"#iterative-development","text":"Abstract Creating and maintaining websites that meet users needs are, complex, difficult, and time consuming.","title":"Iterative Development"},{"location":"#introduction","text":"This website created by johntelford.com LLC , is about optimizing website project life time costs using Iterative Development, Web Component Technologies, and static site generator for developing websites. Developers working on website features, fixes, or testing can deploy private Preview Internet websites with their changes, without disturbing other developers work or the website production version enabling stakeholders to monitor progress and quickly give feedback, speeding up the development process. The slightest errors during development will require Defect Remediation Costs sometime during the life time of the website. The highest cost over the life time of website projects is remediating defects. Content and software defects cost less when found early during development This website is being created and maintained by the technologies described.","title":"Introduction"},{"location":"company/","text":"Company I am the sole proprietor of JohnTelford.com LLC technology consulting company, working with client development projects for more that 30 years. Collaboration A seasoned, knowledgeable, industry professional, Electronics, Software, and Web Engineer specializing in web hardware and software technology disciplines, Architecture, Architecture, and Deployment. Practitioner with extensive experience across most IT functional groups Ability to effectively collaborate to accomplish multidiscipline goals: Senior management teams External and internal clients Functional groups Individual contributors Vendors Nuggets Way back when the Internet web browsers and programming languages came along, I became interested in web technologies, and began learn by doing technology deep dives. I have years of learning ever changing Electronics, Internet, and Software technologies by hands-on experiencing the technologies du jour. I have a passion pursuing what\u2019s new and improved with these industries. Checking out what\u2019s new or not, a pipe dream or not, or what\u2019s new and improved, is like panning for gold. Buried within the mountains of info rubble produced daily, every so often one finds interesting technology nuggets making the effort worthwhile. I use the Hype Curve as a guide.","title":"About"},{"location":"company/#company","text":"I am the sole proprietor of JohnTelford.com LLC technology consulting company, working with client development projects for more that 30 years.","title":"Company"},{"location":"company/#collaboration","text":"A seasoned, knowledgeable, industry professional, Electronics, Software, and Web Engineer specializing in web hardware and software technology disciplines, Architecture, Architecture, and Deployment. Practitioner with extensive experience across most IT functional groups Ability to effectively collaborate to accomplish multidiscipline goals: Senior management teams External and internal clients Functional groups Individual contributors Vendors","title":"Collaboration"},{"location":"company/#nuggets","text":"Way back when the Internet web browsers and programming languages came along, I became interested in web technologies, and began learn by doing technology deep dives. I have years of learning ever changing Electronics, Internet, and Software technologies by hands-on experiencing the technologies du jour. I have a passion pursuing what\u2019s new and improved with these industries. Checking out what\u2019s new or not, a pipe dream or not, or what\u2019s new and improved, is like panning for gold. Buried within the mountains of info rubble produced daily, every so often one finds interesting technology nuggets making the effort worthwhile. I use the Hype Curve as a guide.","title":"Nuggets"},{"location":"contact/","text":"Note A labyrinth symbolizes possible difficulties reaching website project goals. My knowledge and experience with website technology disciplines may be helpful. John Telford Portland, Oregon JohnTelford.com LLC phone : text : 503-312-7248 Email","title":"Contact"},{"location":"creating%20site/","text":"Creating a Site Note This site is build using Materials for MkDocs","title":"Creating a Site"},{"location":"creating%20site/#creating-a-site","text":"Note This site is build using Materials for MkDocs","title":"Creating a Site"},{"location":"define/","text":"Define Defining websites helps the Iterative Development teams and stakeholders understand the project. Defining website prerequisites is the first steps in optimizing website costs. Prerequisites The Define team prerequisites are: - Defining what the project is about - Funding - Purpose - Functionality - Stakeholders - Content - The musts and wants features - The security requirements Purpose Knowing the purpose of the website project helps separate goals into musts and wants Project Funding Project funding is a primary factor in the success of website projects. It enables teams to have skilled people, equipment, and tools. Website Type Is the website: Brochureware ? Websites or web pages produced by directly adapting a company's printed marketing or advertising material. Commerce ? Something else ? Stakeholders Who are the stakeholders? The teams deploy private Preview websites for stakeholders review while creating new, updating, fixing, or exploring new features. Musts and Wants Functionality When stakeholders agree the website Musts functionalities are operational, then it is a Minimum Viable Product . When stakeholders agree the website Wants functionalities are operational, the website is production quality and ready to be deployed to the Internet. Website material What is the website message ? What existing and new website material will be in website pages? Security What are the website security needs?","title":"Team - Define"},{"location":"define/#prerequisites","text":"The Define team prerequisites are: - Defining what the project is about - Funding - Purpose - Functionality - Stakeholders - Content - The musts and wants features - The security requirements","title":"Prerequisites"},{"location":"define/#purpose","text":"Knowing the purpose of the website project helps separate goals into musts and wants","title":"Purpose"},{"location":"define/#project-funding","text":"Project funding is a primary factor in the success of website projects. It enables teams to have skilled people, equipment, and tools.","title":"Project Funding"},{"location":"define/#website-type","text":"Is the website: Brochureware ? Websites or web pages produced by directly adapting a company's printed marketing or advertising material. Commerce ? Something else ?","title":"Website Type"},{"location":"define/#stakeholders","text":"Who are the stakeholders? The teams deploy private Preview websites for stakeholders review while creating new, updating, fixing, or exploring new features.","title":"Stakeholders"},{"location":"define/#musts-and-wants-functionality","text":"When stakeholders agree the website Musts functionalities are operational, then it is a Minimum Viable Product . When stakeholders agree the website Wants functionalities are operational, the website is production quality and ready to be deployed to the Internet.","title":"Musts and Wants Functionality"},{"location":"define/#website-material","text":"What is the website message ? What existing and new website material will be in website pages?","title":"Website material"},{"location":"define/#security","text":"What are the website security needs?","title":"Security"},{"location":"design/","text":"Design Website Design is creating a website look and feel. Useful websites require the user experience and functionality be consistence and complement the content. Overview The core foundations of a user's website experience are: Fast - Website responds quickly to user interactions with smooth scrolling. Integrated - The website uses the full capabilities of the user device to create an experience true to the device. Reliable - Loads quickly and reliably even in uncertain network conditions. Engaging - Keeps user coming back to a website that is designed to look and feel natural. Prerequisites Website design prerequisites are making decisions: Website Design Consistency Theme Color Scheme Typology Navigation User interaction Docusaurus This website is built using Docusaurus development framework. Several other Development Frameworks and other static site generators are available. Docusaurus is: Modern Jamstack documentation site A Single Page Application (SPA) is a single web page, website, or web application that works within a web browser and loads just a single document. It does not need page reloading during its usage, and most of its content remains the same while only some of it needs updating. When the content needs to be updated, the SPA does it through JavaScript APIs. Abstracts the full power of React , MDX , and JSX , for creating user interfaces. Docusaurus is a static site generator. It is created and open-sourced by Meta Open Source Learn more: - Features - Docusaurus Project Details Responsive Website Design The majority of users access websites using mobile devices. They and others have little tolerance for slow loading website pages or pages that do not conform to their screen size. Website design: Ensures pages load quickly Website pages are display correctly on a variety of devices and window or screen size The website look and feel, users experience, and functionality are consistently maintain. Consistency Website consistency is the look and feel of the site. The users experience, and functionality does not vary between website pages. Theme The website theme is: Color scheme Header Pages Fonts Footer Typology Navigation User interaction","title":"Team - Design"},{"location":"design/#overview","text":"The core foundations of a user's website experience are: Fast - Website responds quickly to user interactions with smooth scrolling. Integrated - The website uses the full capabilities of the user device to create an experience true to the device. Reliable - Loads quickly and reliably even in uncertain network conditions. Engaging - Keeps user coming back to a website that is designed to look and feel natural.","title":"Overview"},{"location":"design/#prerequisites","text":"Website design prerequisites are making decisions: Website Design Consistency Theme Color Scheme Typology Navigation User interaction","title":"Prerequisites"},{"location":"design/#docusaurus","text":"This website is built using Docusaurus development framework. Several other Development Frameworks and other static site generators are available. Docusaurus is: Modern Jamstack documentation site A Single Page Application (SPA) is a single web page, website, or web application that works within a web browser and loads just a single document. It does not need page reloading during its usage, and most of its content remains the same while only some of it needs updating. When the content needs to be updated, the SPA does it through JavaScript APIs. Abstracts the full power of React , MDX , and JSX , for creating user interfaces. Docusaurus is a static site generator. It is created and open-sourced by Meta Open Source Learn more: - Features - Docusaurus Project Details","title":"Docusaurus"},{"location":"design/#responsive-website-design","text":"The majority of users access websites using mobile devices. They and others have little tolerance for slow loading website pages or pages that do not conform to their screen size. Website design: Ensures pages load quickly Website pages are display correctly on a variety of devices and window or screen size The website look and feel, users experience, and functionality are consistently maintain. Consistency Website consistency is the look and feel of the site. The users experience, and functionality does not vary between website pages.","title":"Responsive Website Design"},{"location":"design/#theme","text":"The website theme is: Color scheme Header Pages Fonts Footer Typology Navigation User interaction","title":"Theme"},{"location":"diagrams/","text":"Diagrams Sequence sequenceDiagram Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! Graph graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; State stateDiagram-v2 state fork_state <<fork>> [*] --> fork_state fork_state --> State2 fork_state --> State3 state join_state <<join>> State2 --> join_state State3 --> join_state join_state --> State4 State4 --> [*] Class classDiagram Person <|-- Student Person <|-- Professor Person : +String name Person : +String phoneNumber Person : +String emailAddress Person: +purchaseParkingPass() Address \"1\" <-- \"0..1\" Person:lives at class Student{ +int studentNumber +int averageMark +isEligibleToEnrol() +getSeminarsTaken() } class Professor{ +int salary } class Address{ +String street +String city +String state +int postalCode +String country -validate() +outputAsLabel() } Entity-relationship erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses","title":"Diagrams"},{"location":"diagrams/#diagrams","text":"","title":"Diagrams"},{"location":"diagrams/#sequence","text":"sequenceDiagram Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good!","title":"Sequence"},{"location":"diagrams/#graph","text":"graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!];","title":"Graph"},{"location":"diagrams/#state","text":"stateDiagram-v2 state fork_state <<fork>> [*] --> fork_state fork_state --> State2 fork_state --> State3 state join_state <<join>> State2 --> join_state State3 --> join_state join_state --> State4 State4 --> [*]","title":"State"},{"location":"diagrams/#class","text":"classDiagram Person <|-- Student Person <|-- Professor Person : +String name Person : +String phoneNumber Person : +String emailAddress Person: +purchaseParkingPass() Address \"1\" <-- \"0..1\" Person:lives at class Student{ +int studentNumber +int averageMark +isEligibleToEnrol() +getSeminarsTaken() } class Professor{ +int salary } class Address{ +String street +String city +String state +int postalCode +String country -validate() +outputAsLabel() }","title":"Class"},{"location":"diagrams/#entity-relationship","text":"erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses","title":"Entity-relationship"},{"location":"teams/","text":"Iterative Development Teams Abstract Iterative Development Team members work together delivering their work to other teams during the life time of the website. Danger The slightest errors or security issues will require remediations sometime during the life time of the website. graph LR A[Develop] --- B[Define] A --- C[Design] A --- M[Maintain] A --- D[Deploy] B --- C M --- D Note Data is bidirectional Iterative website development enables the Define, Design, Develop, Deploy and Maintain teams to be operational at the same time creating, testing and remediating website defects. Teams Prerequisites Define The Define team prerequisites are: - Defining what the project is about - Funding - Purpose - Functionality - Stakeholders - Content - The musts and wants features - The security requirements Design The Design team prerequisites are: - Decisions about Website Design - Consistency - Theme - Color Scheme - Typology - Navigation - User interaction. Develop The Develop team prerequisites are: - Decisions about resources required to transform the Define and Design work into a website and infrastructure. - Decisions about using a static site generator and programming tools. Deploy The Deploy team prerequisites are: - Decisions about resources required for deploying production version of the website to the Internet. - Decisions about resources required for team developers working on features, fixes, or testing to deploy private Preview Internet websites with their changes, without disturbing other developers work or the production version. See Preview Deployments Maintain The Maintain team prerequisites are: - Decisions about remediating deployed websites Define , Design , Develop , Deploy , or Security defects. - Organizing members from other teams to be part of the Maintain team while remediating specific defects.","title":"Teams Overview"},{"location":"teams/#iterative-development-teams","text":"Abstract Iterative Development Team members work together delivering their work to other teams during the life time of the website. Danger The slightest errors or security issues will require remediations sometime during the life time of the website. graph LR A[Develop] --- B[Define] A --- C[Design] A --- M[Maintain] A --- D[Deploy] B --- C M --- D Note Data is bidirectional Iterative website development enables the Define, Design, Develop, Deploy and Maintain teams to be operational at the same time creating, testing and remediating website defects.","title":"Iterative Development Teams"},{"location":"teams/#teams-prerequisites","text":"","title":"Teams Prerequisites"},{"location":"teams/#define","text":"The Define team prerequisites are: - Defining what the project is about - Funding - Purpose - Functionality - Stakeholders - Content - The musts and wants features - The security requirements","title":"Define"},{"location":"teams/#design","text":"The Design team prerequisites are: - Decisions about Website Design - Consistency - Theme - Color Scheme - Typology - Navigation - User interaction.","title":"Design"},{"location":"teams/#develop","text":"The Develop team prerequisites are: - Decisions about resources required to transform the Define and Design work into a website and infrastructure. - Decisions about using a static site generator and programming tools.","title":"Develop"},{"location":"teams/#deploy","text":"The Deploy team prerequisites are: - Decisions about resources required for deploying production version of the website to the Internet. - Decisions about resources required for team developers working on features, fixes, or testing to deploy private Preview Internet websites with their changes, without disturbing other developers work or the production version. See Preview Deployments","title":"Deploy"},{"location":"teams/#maintain","text":"The Maintain team prerequisites are: - Decisions about remediating deployed websites Define , Design , Develop , Deploy , or Security defects. - Organizing members from other teams to be part of the Maintain team while remediating specific defects.","title":"Maintain"}]}